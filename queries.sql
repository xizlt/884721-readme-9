-- внес типы постов
INSERT INTO content (type)
      VALUE ('post-quote'),
      ('post-text'),
      ('post-photo'),
      ('post-link');


-- Внес пользователей
INSERT INTO users (email, name, password, avatar, about)
      VALUE ('qwe@qwe.ru', 'Эльвира', '123456', 'img/userpic-elvira.jpg', 'У разностороннего множество увлечений, ни одно из которых не относится к работе. Он занимается йогой, конным спортом, играет на фортепиано и тромбоне, любит сериал «Игра престолов» и переводит книги с иврита. Я не против разностороннего, если помимо его интересов в письме что-то по делу: чем он будет полезен и почему он справится с задачей. К сожалению, пока таких не было.'),
      ('asd@qwe.ru', 'Лариса', '789456', 'img/userpic-larisa.jpg', 'У разностороннего множество увлечений, ни одно из которых не относится к работе. Он занимается йогой, конным спортом, играет на фортепиано и тромбоне, любит сериал «Игра престолов» и переводит книги с иврита. Я не против разностороннего, если помимо его интересов в письме что-то по делу: чем он будет полезен и почему он справится с задачей. К сожалению, пока таких не было.'),
      ('zxc@qwe.ru', 'Марк', '147258', 'img/userpic-mark.jpg', 'У разностороннего множество увлечений, ни одно из которых не относится к работе. Он занимается йогой, конным спортом, играет на фортепиано и тромбоне, любит сериал «Игра престолов» и переводит книги с иврита. Я не против разностороннего, если помимо его интересов в письме что-то по делу: чем он будет полезен и почему он справится с задачей. К сожалению, пока таких не было.'),
      ('tyu@qwe.ru', 'Петя', '963258', 'img/userpic-petro.jpg', 'У разностороннего множество увлечений, ни одно из которых не относится к работе. Он занимается йогой, конным спортом, играет на фортепиано и тромбоне, любит сериал «Игра престолов» и переводит книги с иврита. Я не против разностороннего, если помимо его интересов в письме что-то по делу: чем он будет полезен и почему он справится с задачей. К сожалению, пока таких не было.');


-- Внес комментарии
INSERT INTO comments (user_id, post_id, message)
      VALUE (1, 5, 'Однако, уважаемый Максим Ильяхов, снимаю шляпу. Читать эти письма, не допуская внутреннего кипения (я гуманист, но увы, вышел из себя'),
      (1, 4, 'Можно немало посмеяться над приведенными образцами.Но вспоминается советское время,когда классу задавали сочинение на тему:«Как хорошо жить в советской стране!»'),
      (2, 3, 'Алекс, к сожалению, большинство кандидатов не смогли даже списать письмо с образца по ссылке.'),
      (3, 2, 'Для чайника по СУБД как я, отличный урок﻿'),
      (4, 1, 'Всё понятно и без воды, мне понравилось, хороший видосик﻿'),
      (3, 1, 'очень вовремя, у меня как раз курсовой по БД, думаю SQL и выберу для создания проекта');


-- Внес посты
INSERT INTO posts (title, message, user_id, type_content, image, link)
      VALUE ('Цитата', 'Мы в жизни любим только раз, а после ищем лишь похожих', 1, 1, NULL, NULL),
      ('Игра престолов', 'Не могу дождаться начала финального сезона своего любимого сериала!', 2, 2, NULL, NULL),
      ('Наконец, обработал фотки!', NULL, 3, 3, 'img/rock-medium.jpg', NULL),
      ('Моя мечта', NULL, 4, 3, 'img/coast-medium.jpg', NULL),
      ('Лучшие курсы', NULL, 2, 4, NULL, 'www.htmlacademy.ru');


-- Заполнил таблицу likes
INSERT INTO likes (user_id, post_id)
      VALUE (1, 21),
      (2, 22),
      (3, 23),
      (4, 24),
      (2, 25);


-- получил список постов с сортировкой по популярности и вместе с именами авторов и типом контента;
SELECT p.id,
       p.create_date,
       p.title,
       p.message,
       p.quote_writer,
       p.image,
       p.video,
       p.link,
       p.type_content,
       u.NAME,
       c.TYPE,
       -- count(l.user_id) as like_post
FROM posts p
         LEFT JOIN likes l
                   ON l.post_id = p.id
         JOIN users u
              ON l.user_id = u.id
         LEFT JOIN content c
                   ON c.id = p.type_content;
-- ORDER BY like_post, id ASC;


-- получил список постов для конкретного пользователя;
SELECT *
FROM users u
           JOIN likes l
                ON l.user_id = u.id
           JOIN post p
                ON l.post_id = p.id;

-- получил список комментариев для одного поста, в комментариях должен быть логин пользователя;
SELECT p.id,
       p.create_date,
       p.title,
       p.message,
       p.quote_writer,
       p.image,
       p.video,
       p.link,
       cm.message,
       u.email
FROM posts p
         JOIN comments cm
              ON cm.post_id = p.id
         JOIN users u
              ON u.id = p.user_id
WHERE p.id = 25;

-- добавил лайк к посту;
INSERT INTO likes
    SET post_id = 23, user_id = 2;

-- подписался на пользователя.
INSERT INTO subscription
    SET user_id_on = 3, user_id_who = 4;

